// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using sconug.org.mssql.integration;

namespace sconug.org.mssql.integration.Migrations
{
    [DbContext(typeof(CustomerContext))]
    [Migration("20200419013216_SecondTime")]
    partial class SecondTime
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("sconug.org.mssql.integration.Address", b =>
                {
                    b.Property<string>("AddressID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("HouseNum")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Suburb")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressID");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("sconug.org.mssql.integration.Customer", b =>
                {
                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AddressID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmailID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerID");

                    b.HasIndex("AddressID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("sconug.org.mssql.integration.CustomerEvent", b =>
                {
                    b.Property<string>("EventID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("EventID", "CustomerID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Customer_Events");
                });

            modelBuilder.Entity("sconug.org.mssql.integration.CustomerEventTag", b =>
                {
                    b.Property<string>("EventTagID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("EventTagID", "CustomerID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Customer_EventTags");
                });

            modelBuilder.Entity("sconug.org.mssql.integration.Event", b =>
                {
                    b.Property<string>("EventID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AddressID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EventID");

                    b.HasIndex("AddressID");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("sconug.org.mssql.integration.EventEventTag", b =>
                {
                    b.Property<string>("EventID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EventTagID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("EventID", "EventTagID");

                    b.HasIndex("EventTagID");

                    b.ToTable("Event_EventTags");
                });

            modelBuilder.Entity("sconug.org.mssql.integration.EventTag", b =>
                {
                    b.Property<string>("EventTagID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EventTagID");

                    b.ToTable("EventTags");
                });

            modelBuilder.Entity("sconug.org.mssql.integration.Customer", b =>
                {
                    b.HasOne("sconug.org.mssql.integration.Address", "Address")
                        .WithMany("Customers")
                        .HasForeignKey("AddressID");
                });

            modelBuilder.Entity("sconug.org.mssql.integration.CustomerEvent", b =>
                {
                    b.HasOne("sconug.org.mssql.integration.Customer", "Customer")
                        .WithMany("CustomerEvents")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sconug.org.mssql.integration.Event", "Event")
                        .WithMany("CustomerEvents")
                        .HasForeignKey("EventID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("sconug.org.mssql.integration.CustomerEventTag", b =>
                {
                    b.HasOne("sconug.org.mssql.integration.Customer", "Customer")
                        .WithMany("CustomerEventTags")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sconug.org.mssql.integration.EventTag", "EventTag")
                        .WithMany("CustomerEventTags")
                        .HasForeignKey("EventTagID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("sconug.org.mssql.integration.Event", b =>
                {
                    b.HasOne("sconug.org.mssql.integration.Address", "address")
                        .WithMany()
                        .HasForeignKey("AddressID");
                });

            modelBuilder.Entity("sconug.org.mssql.integration.EventEventTag", b =>
                {
                    b.HasOne("sconug.org.mssql.integration.Event", "Event")
                        .WithMany("EventEventTags")
                        .HasForeignKey("EventID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sconug.org.mssql.integration.EventTag", "EventTag")
                        .WithMany("EventEventTags")
                        .HasForeignKey("EventTagID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
